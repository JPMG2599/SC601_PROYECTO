@model SC601_V1.Models.CambiarContrasenaModel

@{
    var usuario = string.IsNullOrWhiteSpace(Session["NombreUsuario"] as string)
                  ? "Invitad@"
                  : (Session["NombreUsuario"] as string).Trim();

    ViewBag.Title = "CambiarContrasena";

    if (!string.IsNullOrEmpty(usuario) && usuario == "Invitad@")
    {
        Layout = "~/Views/Shared/_Layout_Externo.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<div class="row justify-content-center">
    <div class="col-lg-5">
        <div class="card shadow-lg border-0 rounded-lg mt-5">
            <!-- Titulo del formulario -->
            <div class="card-header"><h3 class="text-center font-weight-light my-4">Cambiar Contraseña</h3></div>

            <div class="card-body">

                <!-- Inicio de Formulario -->
                @using (Html.BeginForm("CambiarContrasena", "Usuario"))
                {
                    <!-- Mensaje de Error en caso que exista -->
                    if (!string.IsNullOrEmpty(ViewBag.Error))
                    {
                        <div class="alert alert-warning">
                            @ViewBag.Error
                        </div>
                    }

                    <!-- Input Contraseña Actual -->
                    <div class="form-floating mb-3">
                        @Html.PasswordFor(x => x.ContrasenaActual, new { @class = "form-control", @placeholder = "Contraseña Actual", @Required = "true", @type = "password" })
                        @Html.LabelFor(x => x.ContrasenaActual, new { @class = "form-label" })
                        @Html.ValidationMessageFor(x => x.ContrasenaActual, "", new { @class = "text-danger" })
                    </div>

                    <!-- Input Nueva Contraseña -->
                    <div class="form-floating mb-3">
                        @Html.PasswordFor(x => x.ContrasenaNueva, new { @class = "form-control", @placeholder = "Crear una contraseña", @Required = "true", @type = "password" })
                        @Html.LabelFor(x => x.ContrasenaNueva, new { @class = "form-label" })
                        @Html.ValidationMessageFor(x => x.ContrasenaNueva, "", new { @class = "text-danger" })
                    </div>

                    <!-- Input Confimrar Contraseña -->
                    <div class="form-floating mb-3">
                        @Html.PasswordFor(x => x.ConfirmarContrasena, new { @class = "form-control", @placeholder = "Confirmar contraseña", @Required = "true", @type = "password" })
                        @Html.LabelFor(x => x.ConfirmarContrasena, new { @class = "form-label" })
                        @Html.ValidationMessageFor(x => x.ConfirmarContrasena, "", new { @class = "text-danger" })
                    </div>



                    <!-- Botón de Restablecer -->
                    if (!string.IsNullOrEmpty(usuario) && usuario == "Invitad@")
                    {
                        <div class="d-flex align-items-center justify-content-between mt-4 mb-0">
                            <a class="small" href="@Url.Action("IniciarSesion", "Usuario")">Volver al Incio Sesión</a>
                            <button type="submit" class="btn btn-primary">Cambiar Contraseña</button>
                        </div>
                    }
                    else
                    {
                        <div class="form-floating mb-3">

                            <input type="submit" value="Cambiar contraseña" class="btn btn-primary" />
                            <a href="@Request.UrlReferrer" class="btn btn-secondary">Cancelar</a>
                        </div>
                    
                }
            }
                <!-- Fin  de Formulario -->
            </div>

            @if (!string.IsNullOrEmpty(usuario) && usuario == "Invitad@")
            {
                <div class="card-footer text-center py-3">
                    <div class="small"><a href="@Url.Action("RegistrarUsuario", "Usuario")">¿Necesitas una cuenta? Regístrate!</a></div>
                </div>
            }
        </div>
    </div>
    </div>